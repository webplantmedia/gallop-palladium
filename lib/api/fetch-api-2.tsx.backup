import { ApolloClient, InMemoryCache, HttpLink, gql } from '@apollo/client';
const API_URL = process.env.WORDPRESS_API_URL ?? '';
const API_BLOG_URL = process.env.WORDPRESS_BLOG_API_URL ?? '';

// Set up Apollo Client
const client = new ApolloClient({
  link: new HttpLink({
    uri: API_URL, // Replace with your actual endpoint
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${process.env.WORDPRESS_AUTH_REFRESH_TOKEN || ''}`,
    },
  }),
  cache: new InMemoryCache(),
});

export async function fetchAPI2(query: any, { variables }: any = {}) {
  try {
    // Ensure the query is properly tagged with gql
    const parsedQuery = gql`
      ${query}
    `;

    // Use Apollo Client to fetch data
    const { data, errors } = await client.query({
      query: parsedQuery,
      variables,
    });

    if (errors && errors.length > 0) {
      console.error(errors);
      throw new Error('Failed to fetch API');
    }

    return data;
  } catch (error) {
    // Handle or throw the error as needed
    console.error('Error fetching data with Apollo Client:', error);
    throw error;
  }
}
